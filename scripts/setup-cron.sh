#!/bin/bash

# Script para configurar el cron job de recordatorios autom√°ticos
# Este script configura el sistema para enviar recordatorios diariamente

echo "üîß Configurando sistema de recordatorios autom√°ticos..."

# Verificar que Node.js est√© instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Error: Node.js no est√° instalado"
    echo "Por favor instala Node.js antes de continuar"
    exit 1
fi

echo "‚úÖ Node.js encontrado: $(node --version)"

# Obtener la ruta absoluta del proyecto
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
SCRIPT_PATH="$PROJECT_DIR/scripts/send-reminders.js"

echo "üìç Directorio del proyecto: $PROJECT_DIR"
echo "üìç Ruta del script: $SCRIPT_PATH"

# Verificar que el script existe
if [ ! -f "$SCRIPT_PATH" ]; then
    echo "‚ùå Error: No se encontr√≥ el script send-reminders.js"
    exit 1
fi

echo "‚úÖ Script encontrado"

# Hacer el script ejecutable
chmod +x "$SCRIPT_PATH"
echo "‚úÖ Script hecho ejecutable"

# Crear el comando del cron job
CRON_COMMAND="0 9 * * * cd $PROJECT_DIR && /usr/bin/node $SCRIPT_PATH >> $PROJECT_DIR/logs/reminders.log 2>&1"

echo "üìù Comando del cron job:"
echo "   $CRON_COMMAND"

# Crear directorio de logs si no existe
mkdir -p "$PROJECT_DIR/logs"
echo "‚úÖ Directorio de logs creado"

# Configurar variables de entorno si no existen
ENV_FILE="$PROJECT_DIR/.env"
if [ ! -f "$ENV_FILE" ]; then
    echo "üìù Creando archivo .env..."
    cat > "$ENV_FILE" << EOF
# Configuraci√≥n para recordatorios autom√°ticos
REMINDER_API_URL=http://localhost:3000/api/reminders
REMINDER_API_TOKEN=default-secret-token

# Cambiar estos valores seg√∫n tu configuraci√≥n
# REMINDER_API_URL=https://tu-dominio.com/api/reminders
# REMINDER_API_TOKEN=tu-token-secreto-aqui
EOF
    echo "‚úÖ Archivo .env creado"
    echo "‚ö†Ô∏è  IMPORTANTE: Edita el archivo .env con tus valores reales"
else
    echo "‚úÖ Archivo .env ya existe"
fi

# Funci√≥n para agregar el cron job
add_cron_job() {
    # Verificar si ya existe el cron job
    if crontab -l 2>/dev/null | grep -q "send-reminders.js"; then
        echo "‚ö†Ô∏è  Ya existe un cron job para recordatorios"
        echo "üìã Cron jobs actuales relacionados:"
        crontab -l 2>/dev/null | grep "send-reminders.js"
        echo ""
        read -p "¬øDeseas reemplazar el cron job existente? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo "‚ùå Operaci√≥n cancelada"
            return 1
        fi
        
        # Remover cron jobs existentes
        (crontab -l 2>/dev/null | grep -v "send-reminders.js") | crontab -
        echo "‚úÖ Cron jobs anteriores removidos"
    fi
    
    # Agregar el nuevo cron job
    (crontab -l 2>/dev/null; echo "$CRON_COMMAND") | crontab -
    echo "‚úÖ Cron job agregado exitosamente"
    return 0
}

# Funci√≥n para mostrar el estado actual
show_status() {
    echo ""
    echo "üìä Estado actual del sistema:"
    echo "================================"
    
    echo "üìÖ Cron jobs configurados:"
    if crontab -l 2>/dev/null | grep -q "send-reminders.js"; then
        crontab -l 2>/dev/null | grep "send-reminders.js" | while read line; do
            echo "   ‚úÖ $line"
        done
    else
        echo "   ‚ùå No hay cron jobs configurados"
    fi
    
    echo ""
    echo "üìÅ Archivos del sistema:"
    echo "   Script: $([ -f "$SCRIPT_PATH" ] && echo "‚úÖ Existe" || echo "‚ùå No existe")"
    echo "   Logs: $([ -d "$PROJECT_DIR/logs" ] && echo "‚úÖ Directorio existe" || echo "‚ùå No existe")"
    echo "   .env: $([ -f "$ENV_FILE" ] && echo "‚úÖ Existe" || echo "‚ùå No existe")"
    
    echo ""
    echo "üîç Verificaci√≥n del script:"
    if node "$SCRIPT_PATH" --status 2>/dev/null; then
        echo "‚úÖ Script funciona correctamente"
    else
        echo "‚ùå Error al ejecutar el script"
    fi
}

# Men√∫ principal
echo ""
echo "üöÄ Configuraci√≥n de Recordatorios Autom√°ticos"
echo "=============================================="
echo ""
echo "Opciones disponibles:"
echo "1) Agregar/actualizar cron job"
echo "2) Mostrar estado del sistema"
echo "3) Probar env√≠o de recordatorios (manual)"
echo "4) Salir"
echo ""

read -p "Selecciona una opci√≥n (1-4): " -n 1 -r
echo ""

case $REPLY in
    1)
        add_cron_job
        ;;
    2)
        show_status
        ;;
    3)
        echo "üß™ Ejecutando prueba manual..."
        cd "$PROJECT_DIR"
        node "$SCRIPT_PATH"
        ;;
    4)
        echo "üëã ¬°Hasta luego!"
        exit 0
        ;;
    *)
        echo "‚ùå Opci√≥n inv√°lida"
        exit 1
        ;;
esac

echo ""
echo "üèÅ Configuraci√≥n completada"
echo ""
echo "üìã Pr√≥ximos pasos:"
echo "1. Edita el archivo .env con tus valores reales"
echo "2. Verifica que tu aplicaci√≥n est√© ejecut√°ndose"
echo "3. Revisa los logs en $PROJECT_DIR/logs/reminders.log"
echo ""
echo "üí° Comandos √∫tiles:"
echo "   Ver logs: tail -f $PROJECT_DIR/logs/reminders.log"
echo "   Ver cron jobs: crontab -l"
echo "   Probar manualmente: node $SCRIPT_PATH"
echo "   Verificar estado: node $SCRIPT_PATH --status"
